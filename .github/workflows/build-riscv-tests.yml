name: RISC-V Test Suite Release
on:
  workflow_dispatch:

env:
  SPIKE_HASH: b0d7621ff8e9520aaacd57d97d4d99a545062d14

jobs:
  build-riscv-vector-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        VLEN: [128, 256, 512]
        # For now ELEN, can't be freely choosen and matches XLEN
        XLEN: [32, 64]
    env:
      # Provide regex to filter for which instruction tests should be generated.
      # Use '.*' for all, or '^vle8\.v$' for specific instructions etc.
      PATTERN: '.*'
      MARCH: 'gcv_zvbb_zvbc_zfh_zvfh_zvkg_zvkned_zvknha_zvksed_zvksh'

    steps:
    - name: Checkout repository with submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup golang
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y device-tree-compiler

    - name: Initialize nested submodules
      run: |
        cd riscv-vector-tests
        git submodule update --init --recursive

    - name: Cache Spike
      id: cache-spike
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/riscv
        key: ${{ runner.os }}-spike-${{ env.SPIKE_HASH }}

    - name: Cache RISC-V Toolchain
      id: cache-toolchain
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/riscv
        key: ${{ runner.os }}-riscv-toolchain-2024.04.12-nightly

    # Newer versions of the nightly build don't come with
    # the vector extension, this needs to be checked manually
    - name: Install RISC-V Toolchain
      if: steps.cache-toolchain.outputs.cache-hit != 'true'
      run: |
        wget -O- -q https://github.com/riscv-collab/riscv-gnu-toolchain/releases/download/2025.07.16/riscv64-elf-ubuntu-22.04-gcc-nightly-2025.07.16-nightly.tar.xz | tar -xJf -

    - name: Set Environment Variables
      run: |
        echo "PATH=${{ github.workspace }}/riscv/bin:$PATH" >> $GITHUB_ENV
        echo "RISCV=${{ github.workspace }}/riscv" >> $GITHUB_ENV

    - name: Build Spike
      if: steps.cache-spike.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/riscv-software-src/riscv-isa-sim.git
        cd riscv-isa-sim
        git reset --hard ${{ env.SPIKE_HASH }}
        mkdir build
        cd build
        ../configure --prefix=${{ github.workspace }}/riscv
        make -j$(nproc)
        make install

    - name: Build RISC-V Vector Tests
      run: |
        cd riscv-vector-tests
        git submodule update --init --recursive
        make generate-stage1 --environment-overrides VLEN=${{ matrix.VLEN }} XLEN=${{ matrix.XLEN }} PATTERN='${{ env.PATTERN }}' \
          MARCH=rv${{ matrix.XLEN }}${{ env.MARCH }}
        make all -j$(nproc) --environment-overrides VLEN=${{ matrix.VLEN }} XLEN=${{ matrix.XLEN }} PATTERN='${{ env.PATTERN }}' \
          MARCH=rv${{ matrix.XLEN }}${{ env.MARCH }}

    - name: Prefix RVV Binaries
      run: |
        mkdir -p temp-archive/
        for f in riscv-vector-tests/out/v${{ matrix.VLEN }}x${{ matrix.XLEN }}machine/bin/stage2/*; do
          cp "$f" "temp-archive/rv${{ matrix.XLEN }}$(basename "$f")"
        done

        ARCHIVE_NAME="riscv-vector-tests-v${{ matrix.VLEN }}x${{ matrix.XLEN }}.tar.gz"

        tar -czf $ARCHIVE_NAME -C temp-archive .
        mv $ARCHIVE_NAME temp-archive/

        find temp-archive/ ! -name "$ARCHIVE_NAME" -type f -delete

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: v${{ matrix.VLEN }}x${{ matrix.XLEN }}
        path: temp-archive/*.tar.gz

  build-riscv-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository with submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Cache RISC-V Toolchain
      id: cache-toolchain
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/riscv
        key: ${{ runner.os }}-riscv-toolchain-2024.04.12-nightly

    - name: Install RISC-V Toolchain
      if: steps.cache-toolchain.outputs.cache-hit != 'true'
      run: |
        wget -O- -q https://github.com/riscv-collab/riscv-gnu-toolchain/releases/download/2024.04.12/riscv64-elf-ubuntu-22.04-gcc-nightly-2024.04.12-nightly.tar.gz | tar -xzf -

    - name: Set Environment Variables
      run: |
        echo "PATH=${{ github.workspace }}/riscv/bin:$PATH" >> $GITHUB_ENV
        echo "RISCV=${{ github.workspace }}/riscv" >> $GITHUB_ENV

    - name: Build RISC-V Test
      run: |
        mkdir -p temp-archive/

        cd riscv-tests
        git submodule update --init --recursive
        autoconf
        ./configure  --prefix=${{ github.workspace }}/riscv
        make isa

        find isa/ -maxdepth 1 -type f \( -name "rv32*" -o -name "rv64*" \) ! -name "*.dump" -exec cp {} ../temp-archive/ \;

        cd ..

        ARCHIVE_NAME="riscv-tests.tar.gz"

        tar -czf $ARCHIVE_NAME -C temp-archive .
        mv $ARCHIVE_NAME temp-archive/

        find temp-archive/ ! -name "$ARCHIVE_NAME" -type f -delete

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: riscv-tests
        path: temp-archive/*.tar.gz

  package-and-release:
    runs-on: ubuntu-latest
    needs: [build-riscv-vector-tests, build-riscv-tests]
    steps:
      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Package test suites
        run: |
          mkdir -p release
          DATE=$(date +'%Y-%m-%d')
          RELEASE_ARCHIVE="riscv-complete-tests-machine-${DATE}-linux.tar.gz"

          RISCV_TESTS_HASH=$(git -C riscv-tests rev-parse HEAD)
          RISCV_VECTOR_TESTS_HASH=$(git -C riscv-vector-tests rev-parse HEAD)

          echo "REPO_NAME=$GITHUB_REPOSITORY" >> $GITHUB_ENV
          echo "REPO_HASH=$GITHUB_SHA" >> $GITHUB_ENV
          echo "RISCV_TESTS_HASH=$RISCV_TESTS_HASH" >> $GITHUB_ENV
          echo "RISCV_VECTOR_TESTS_HASH=$RISCV_VECTOR_TESTS_HASH" >> $GITHUB_ENV
          echo "RELEASE_DATE=$DATE" >> $GITHUB_ENV

          find artifacts/ -name "*.tar.gz" -exec cp {} release/ \;

      - name: Publish release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.RELEASE_DATE }}
          name: RISC-V Tests - ${{ env.RELEASE_DATE }}
          body: |
            Precompiled binaries for testing of the Sail RISC-V model.

            Built with:
            ${{ env.REPO_NAME }}: ${{ env.REPO_HASH}}
            riscv-tests: ${{ env.RISCV_TESTS_HASH }}
            riscv-vector-tests: ${{ env.RISCV_VECTOR_TESTS_HASH }}
            spike: ${{ env.SPIKE_HASH}}
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
